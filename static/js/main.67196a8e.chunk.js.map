{"version":3,"sources":["layout/index.js","redux/actions/index.js","components/sheetItem/index.js","components/sheetList/index.js","components/sheetAddForm/index.js","pages/todoSheet/index.js","App.js","reportWebVitals.js","utils/index.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Layout","children","className","ADD_NEW_TASK","TASK_IS_DONE","UNDONE_TASK","REMOVE_TASK","EDIT_TASK","SheetItem","todo","dispatch","useDispatch","onTodoToggle","id","done","type","taskIsUndone","onTodoRemoval","onChangeTask","newTask","editTask","Item","actions","title","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","onChange","defaultChecked","onConfirm","danger","Text","editable","maxLength","autoSize","maxRows","minRows","SheetList","todos","locale","emptyText","dataSource","renderItem","pagination","position","pageSize","SheetAddForm","Form","useForm","form","onFinish","getFieldValue","resetFields","layout","gutter","xs","sm","md","lg","xl","name","rules","required","message","placeholder","htmlType","block","PlusCircleFilled","TodoSheet","useSelector","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","generateUuid","replace","c","crypto","getRandomValues","Uint8Array","toString","initialState","reducers","combineReducers","action","map","task","filter","store","createStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67196a8e.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\nconst Layout = ({children}) => {\r\n  return (\r\n    <div className={\"layout\"}>{children}</div>\r\n  )\r\n}\r\n\r\nexport default Layout","export const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nexport const TASK_IS_DONE = 'TASK_IS_DONE';\r\nexport const UNDONE_TASK = 'UNDONE_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK'\r\n\r\nexport const addNewTask = (title) => {\r\n    return {\r\n        type: ADD_NEW_TASK,\r\n        title: title\r\n    }\r\n};\r\n\r\nexport const taskIsDone = (id) => {\r\n    return {\r\n        type: TASK_IS_DONE,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const taskIsUndone = (id) => {\r\n    return {\r\n        type: UNDONE_TASK,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const removeTask = (id) => {\r\n    return {\r\n        type: REMOVE_TASK,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const editTask = (newTask, id) => {\r\n    return {\r\n        type: EDIT_TASK,\r\n        newTask: newTask,\r\n        id: id\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport {Button, List, Popconfirm, Switch, Tooltip} from 'antd';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\n\r\nimport \"./style.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {editTask, removeTask, taskIsDone, taskIsUndone} from \"../../redux/actions\";\r\nimport Text from \"antd/es/typography/Text\";\r\n\r\nconst SheetItem = ({todo}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onTodoToggle = (todo) => {\r\n        if (!todo.done) {\r\n            dispatch(taskIsDone(todo.id))\r\n        } else {\r\n            dispatch(taskIsUndone(todo.id))\r\n        }\r\n    }\r\n\r\n    const onTodoRemoval = (todo) => {\r\n        dispatch(removeTask(todo.id))\r\n    }\r\n\r\n    const onChangeTask = (newTask, id) => {\r\n        dispatch(editTask(newTask, id))\r\n    }\r\n\r\n    return (\r\n        <List.Item\r\n            actions={[\r\n                <Tooltip\r\n                    title={todo.done ? 'Done' : 'Undone'}\r\n                >\r\n                    <Switch\r\n                        checkedChildren={<CheckOutlined/>}\r\n                        unCheckedChildren={<CloseOutlined/>}\r\n                        onChange={() => onTodoToggle(todo)}\r\n                        defaultChecked={todo.done}\r\n                    />\r\n                </Tooltip>,\r\n                <Popconfirm\r\n                    title=\"Are you sure you want to delete?\"\r\n                    onConfirm={() => {\r\n                        onTodoRemoval(todo)\r\n                    }}\r\n                >\r\n                    <Button className=\"remove-todo-button\" type=\"primary\" danger>\r\n                        X\r\n                    </Button>\r\n                </Popconfirm>,\r\n            ]}\r\n            className=\"list-item\"\r\n            key={todo.id}\r\n        >\r\n            <div className=\"todo-item\">\r\n                <Text\r\n                    editable={{\r\n                        onChange: (newTask) => onChangeTask(newTask, todo.id),\r\n                        maxLength: 50,\r\n                        autoSize: {maxRows: 5, minRows: 3}\r\n                    }}\r\n                    type={todo.done ? 'success' : 'danger'}>\r\n                    {todo.title}\r\n                </Text>\r\n            </div>\r\n        </List.Item>\r\n    );\r\n}\r\n\r\nexport default SheetItem","import React from 'react'\r\nimport \"./style.css\"\r\nimport {List} from 'antd';\r\nimport SheetItem from \"../sheetItem\";\r\n\r\nconst SheetList = ({todos}) => {\r\n  return (\r\n    <List\r\n      locale={{\r\n        emptyText: \"There's nothing to do :(\",\r\n      }}\r\n      dataSource={todos}\r\n      renderItem={(todo) => (\r\n        <SheetItem\r\n          key={todo.id}\r\n          todo={todo}\r\n        />\r\n      )}\r\n      pagination={{\r\n        position: 'bottom',\r\n        pageSize: 10,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SheetList","import React from 'react'\r\nimport {Button, Col, Form, Input, Row} from 'antd';\r\nimport {PlusCircleFilled} from '@ant-design/icons';\r\nimport \"./style.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addNewTask} from \"../../redux/actions\";\r\n\r\nconst SheetAddForm = () => {\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const onFinish = () => {\r\n        dispatch(addNewTask(form.getFieldValue('name')))\r\n        form.resetFields();\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            onFinish={onFinish}\r\n            layout=\"horizontal\"\r\n            className=\"todo-form\"\r\n        >\r\n            <Row gutter={20}>\r\n                <Col xs={24} sm={24} md={17} lg={19} xl={20}>\r\n                    <Form.Item\r\n                        name={'name'}\r\n                        rules={[{required: true, message: 'This field is required'}]}\r\n                    >\r\n                        <Input placeholder=\"What needs to be done?\"/>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={7} lg={5} xl={4}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>\r\n                        <PlusCircleFilled/>\r\n                        Add todo\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SheetAddForm","import React from 'react'\r\nimport \"./style.css\"\r\nimport Layout from \"../../layout\";\r\nimport SheetList from \"../../components/sheetList\";\r\nimport SheetAddForm from \"../../components/sheetAddForm\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TodoSheet = () => {\r\n\r\n  const todos = useSelector(state => state.todos);\r\n\r\n  return (\r\n    <Layout>\r\n      <SheetAddForm/>\r\n      <SheetList todos={todos}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TodoSheet","import React from 'react'\r\nimport TodoSheet from \"./pages/todoSheet\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TodoSheet/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const generateUuid = () => {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        (c ^ ((crypto.getRandomValues(new Uint8Array(1))[0] & 15) >> c / 4)).toString(16)\r\n    );\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport {ADD_NEW_TASK, EDIT_TASK, REMOVE_TASK, TASK_IS_DONE, UNDONE_TASK} from \"../actions\"\r\nimport {generateUuid} from \"../../utils\";\r\n\r\nconst initialState = {\r\n    todos: []\r\n}\r\n\r\nconst todos = (state = initialState.todos, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: generateUuid(),\r\n                    title: action.title,\r\n                    done: false\r\n                }\r\n            ]\r\n\r\n        case TASK_IS_DONE:\r\n            return state.map(task => {\r\n                if (task.id === action.id) {\r\n                    return {\r\n                        ...task,\r\n                        done: true\r\n                    }\r\n                } else {\r\n                    return task\r\n                }\r\n            })\r\n\r\n        case UNDONE_TASK:\r\n            return state.map(task => {\r\n                if (task.id === action.id) {\r\n                    return {\r\n                        ...task,\r\n                        done: false\r\n                    }\r\n                } else {\r\n                    return task\r\n                }\r\n            })\r\n\r\n        case REMOVE_TASK:\r\n            return state.filter(task => task.id !== action.id)\r\n        case EDIT_TASK:\r\n            return state.map(task => {\r\n                if (task.id === action.id) {\r\n                    return {\r\n                        ...task,\r\n                        title: action.newTask\r\n                    }\r\n                } else {\r\n                    return task\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    todos: todos\r\n})\r\n\r\nexport default reducers","import {createStore} from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport \"regenerator-runtime/runtime\";\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}